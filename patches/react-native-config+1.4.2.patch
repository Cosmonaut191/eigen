diff --git a/node_modules/react-native-config/android/dotenv.gradle b/node_modules/react-native-config/android/dotenv.gradle
index d7373f8..9032316 100644
--- a/node_modules/react-native-config/android/dotenv.gradle
+++ b/node_modules/react-native-config/android/dotenv.gradle
@@ -142,41 +142,3 @@ android {
 
     }
 }
-
-tasks.whenTaskAdded { task ->
-    if (project.hasProperty("envConfigFiles")) {
-        project.envConfigFiles.each { envConfigName, envConfigFile ->
-            if (task.name.toLowerCase() == "generate"+envConfigName+"buildconfig") {
-                task.doFirst() {
-                    android.applicationVariants.all { variant ->
-                        def variantConfigString = variant.getName()
-                        if (envConfigName.contains(variantConfigString.toLowerCase())) {
-                            loadDotEnv(envConfigName)
-
-                            def encodedKeys = [] //needed to keep track of keys encoded
-                            String xorKey = generateKey(keyLength)
-                            project.env.each { k, v ->
-                                def escaped = v.replaceAll("%","\\\\u0025")
-                                def encodedValue = encodeString(v, xorKey)
-                                def encodedEscaped = encodeString(escaped, xorKey)
-
-
-                                variant.buildConfigField "String", k, "\"$encodedValue\""
-                                variant.buildConfigField "String", "XOR_KEY", "\"$xorKey\""
-
-                                variant.resValue "string", k, "\"$encodedEscaped\""
-                                variant.resValue "string", "XOR_KEY", "\"$xorKey\""
-
-                                encodedKeys << k
-                            }
-                            //Add the encodedkeys to buildconfig. Needed to know which var to decode
-                            def escapedKeys = escapeEncodedKeys(encodedKeys)
-                            variant.buildConfigField "String[]", "ENCODED_KEYS", escapedKeys
-                        }
-                    }
-                }
-            }
-        }
-    }
-}
-
diff --git a/node_modules/react-native-config/react-native-config.podspec b/node_modules/react-native-config/react-native-config.podspec
index 54985dd..2a37fb0 100644
--- a/node_modules/react-native-config/react-native-config.podspec
+++ b/node_modules/react-native-config/react-native-config.podspec
@@ -21,7 +21,24 @@ Pod::Spec.new do |s|
     name: 'Config codegen',
     script: %(
 set -ex
-HOST_PATH="$SRCROOT/../.."
+# Eigen doesn't use standard React Native folder structure (yet) so we have to do this hack.
+LAST_8=${SRCROOT: -8}
+HOST_PATH="$SRCROOT/.."
+if [ "$LAST_8" = "ios/Pods" ]; then
+    echo "in ios directory setting source root"
+    HOST_PATH="$SRCROOT/../.."
+else
+    echo "in root directory setting source root"
+    HOST_PATH="$SRCROOT/.."
+fi
+# Use CI or shared env file.
+if [ -z ${CI+x} ]; then
+  echo "Not running on CI, using shared env file";
+  export ENVFILE=".env.shared";
+else
+  echo "Running on CI, using CI env file";
+  export ENVFILE=".env.ci";
+fi
 "${PODS_TARGET_SRCROOT}/ios/ReactNativeConfig/BuildDotenvConfig.rb" "$HOST_PATH" "${PODS_TARGET_SRCROOT}/ios/ReactNativeConfig"
 ),
     execution_position: :before_compile,
@@ -44,6 +61,14 @@ HOST_PATH="$SRCROOT/../.."
       script: %(
         set -ex
         HOST_PATH="$SRCROOT/../.."
+        # Use CI or shared env file.
+        if [ -z ${CI+x} ]; then
+          echo "Not running on CI, using shared env file";
+          export ENVFILE=".env.shared";
+        else
+          echo "Running on CI, using CI env file";
+          export ENVFILE=".env.ci";
+        fi
         "${PODS_TARGET_SRCROOT}/ios/ReactNativeConfig/BuildDotenvConfig.rb" "$HOST_PATH" "${PODS_TARGET_SRCROOT}/ios/ReactNativeConfig"
         ),
       execution_position: :before_compile,
